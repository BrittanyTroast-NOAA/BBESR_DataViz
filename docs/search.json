[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BB ESR Viz Intro",
    "section": "",
    "text": "Update renv\nThings I should put here\n\nGeneral info about the BB ESR\nPictures of front of it\nLink to the ESR\nExecutive Summary?\nTest to see if things change…again"
  },
  {
    "objectID": "Test_App.html",
    "href": "Test_App.html",
    "title": "Indicator",
    "section": "",
    "text": "#| standalone: true\n#| viewerHeight: 1000\n\n\n######START APP######\n\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(gt)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(shinyjs)\n\nui &lt;- fluidPage(\n  useShinyjs(),\n  #Sidebar\n  sidebarLayout(\n    sidebarPanel(selectInput(\"data\", label = h2(HTML(\"&lt;b&gt;Choose Indicator:&lt;/b&gt;\"), style = \"font-size:22px;\"),\n                             choices = list(\n                               'Drivers' = list(\"Precipitation\",\"Air Temperature\"),\n                               'Pressures'=list(\"Oil Spills\", \"Nuisance Aquatic Vegetation\"),\n                               'States'=list(\"Red Drum\",\"Brown Pelican\"),\n                               'Human Activities'=list(\"Blue Crab Catch\",\"Oyster Catch\", \"Seafood Dealers & Vessels Fishing\"),\n                               'Human Dimensions'=list(\"Percent Small Business\",\"Unemployment\")\n                             )),\n                 selectInput(\"data2\", label = h2(HTML(\"&lt;b&gt;Compare Indicator:&lt;/b&gt;\"), style = \"font-size:22px;\"),\n                             choices = list(\"\",\n                               'Drivers' = list(\"Precipitation\",\"Air Temperature\"),\n                               'Pressures'=list(\"Oil Spills\", \"Nuisance Aquatic Vegetation\"),\n                               'States'=list(\"Red Drum\",\"Brown Pelican\"),\n                               'Human Activities'=list(\"Blue Crab Catch\",\"Oyster Catch\", \"Seafood Dealers & Vessels Fishing\"),\n                               'Human Dimensions'=list(\"Percent Small Business\",\"Unemployment\")\n                             )),\n                 sliderInput(\"yearSlider\", \"Year Range:\", min = 1800, max = 2024, value= c(1800, 2024), sep=\"\"),\n                 tags$style(\"#yearSlider .irs-grid-text {font-size: 25px}\"),\n                 actionButton(\"goButton\", HTML(\"&lt;b&gt;Go&lt;/b&gt;\"), style='font-size:150%'),\n                 actionButton(\"reset\", HTML(\"&lt;b&gt;Reset&lt;/b&gt;\"), style='font-size:150%'),\n                 width = 2),\n    #Main\n    navset_card_tab(\n      nav_panel(\"Graph\",\n       plotlyOutput(\"plot\", height = '120%')),\n\n      nav_panel(\"Summary\",\n\n               tableOutput(\"gt_table\"),\n\n               htmlOutput(\"plain_header\"),\n               htmlOutput(\"plain_text\"),\n               tags$style(\"#plain_text {font-size:20px;margin-bottom: 25px;margin-top: 15px;}\"),\n               tags$style(\"#plain_header {font-size:24px;margin-top: 25px;}\")),\n      \n      nav_panel(\"Compare Indicators\",\n                uiOutput(\"message_or_plot\")\n      )\n\n  \n  ) #sidePan\n \n ) #sideLay\n \n) #flpage\n\nserver &lt;- function(input, output, session) {\n  \n  ####FUNCTIONS####\n  # Plot from RDS object\n  plot_fn_obj&lt;-function(df_obj) {\n    df_obj$data &lt;- subset(df_obj$data, df_obj$data$year&gt;= isolate(input$yearSlider[1]) & df_obj$data$year&lt;= isolate(input$yearSlider[2]))\n    df_obj$pos &lt;- subset(df_obj$pos, df_obj$pos$year&gt;= isolate(input$yearSlider[1]) & df_obj$pos$year&lt;= isolate(input$yearSlider[2]))\n    df_obj$neg &lt;- subset(df_obj$neg, df_obj$neg$year&gt;= isolate(input$yearSlider[1]) & df_obj$neg$year&lt;= isolate(input$yearSlider[2]))\n    \n    \n    if (ncol(df_obj$data)&lt;5.5){\n      #single plot\n      plot_main&lt;-ggplot(data=df_obj$data, aes(x=year, y=value))+\n        geom_ribbon(data=df_obj$pos, aes(group=1,ymax=max, ymin=df_obj$vals$mean),fill=\"#7FFF7F\")+\n        geom_ribbon(data=df_obj$neg, aes(group=1,ymax=df_obj$vals$mean, ymin=min), fill=\"#FF7F7F\")+\n        geom_rect(aes(xmin=min(df_obj$data$year),xmax=max(df_obj$data$year),ymin=df_obj$vals$mean-df_obj$vals$sd, ymax=df_obj$vals$mean+df_obj$vals$sd), fill=\"white\")+\n        geom_hline(yintercept=df_obj$vals$mean, lty=\"dashed\")+\n        geom_hline(yintercept=df_obj$vals$mean+df_obj$vals$sd)+\n        geom_hline(yintercept=df_obj$vals$mean-df_obj$vals$sd)+\n        geom_line(aes(group=1), lwd=1)+\n        labs(x=\"Year\", y=df_obj$labs[2,2], title = df_obj$labs[1,2])+\n        theme_bw() + theme(title = element_text(size=14, face = \"bold\"))\n      \n      if (max(df_obj$data$year)-min(df_obj$data$year)&gt;20) {\n        plot_main&lt;-plot_main+scale_x_continuous(breaks = seq(min(df_obj$data$year),max(df_obj$data$year),5))\n      } else {\n        plot_main&lt;-plot_main+scale_x_continuous(breaks = seq(min(df_obj$data$year),max(df_obj$data$year),2))\n      }\n      plot_main\n      \n    } else {\n      #facet plot\n      \n      plot_sec&lt;-ggplot(data=df_obj$data, aes(x=year, y=value))+\n        facet_wrap(~subnm, ncol=ifelse(length(unique(df_obj$data$subnm))&lt;4,1,2), scales = \"free_y\")+\n        geom_ribbon(data=df_obj$pos, aes(group=subnm,ymax=max, ymin=mean),fill=\"#7FFF7F\")+\n        geom_ribbon(data=df_obj$neg, aes(group=subnm,ymax=mean, ymin=min), fill=\"#FF7F7F\")+\n        geom_rect(data=merge(df_obj$data,df_obj$vals), aes(xmin=min(df_obj$data$year),xmax=max(df_obj$data$year),ymin=mean-sd, ymax=mean+sd), fill=\"white\")+\n        geom_hline(aes(yintercept=mean), lty=\"dashed\",data=df_obj$vals)+\n        geom_hline(aes(yintercept=mean+sd),data=df_obj$vals)+\n        geom_hline(aes(yintercept=mean-sd),data=df_obj$vals)+\n        geom_line(aes(group=1), lwd=0.75)+\n        labs(x=\"Year\", y=df_obj$labs[2,2], title = df_obj$labs[1,2])+\n        theme_bw()+theme(strip.background = element_blank(),\n                         strip.text = element_text(face=\"bold\"),\n                         title = element_text(size=14, face = \"bold\"))\n      \n      if (max(df_obj$data$year)-min(df_obj$data$year)&gt;20) {\n        plot_sec&lt;-plot_sec+scale_x_continuous(breaks = seq(min(df_obj$data$year),max(df_obj$data$year),5))\n      } else {\n        # plot_sec&lt;-plot_sec+scale_x_continuous(breaks = seq(min(df_obj$data$year),max(df_obj$data$year),2))\n      }\n      plot_sec\n      \n    }\n  }\n  \n  ####GET DATA####\n  dat_shrt_nms&lt;-data.frame(c(\n    oilsp=\"Oil Spills\",\n    nav=\"Nuisance Aquatic Vegetation\",\n    rdrum=\"Red Drum\",\n    blcrab=\"Blue Crab Catch\",\n    brpeli=\"Brown Pelican\",\n    oystercat=\"Oyster Catch\",\n    persmbusi=\"Percent Small Business\",\n    vesfish=\"Seafood Dealers & Vessels Fishing\",\n    unemploy=\"Unemployment\",\n    precip=\"Precipitation\",\n    airtemps=\"Air Temperature\"\n  ))\n  dat_shrt_nms&lt;-tibble::rownames_to_column(dat_shrt_nms)\n  colnames(dat_shrt_nms)&lt;-c(\"short\", \"long\")\n  \n  #Data 1\n  shrt_nm&lt;-reactive({dat_shrt_nms$short[dat_shrt_nms$long==input$data]})\n  data_url &lt;-reactive({paste0(\"https://raw.githubusercontent.com/BrittanyTroast-NOAA/BBESR_DataViz/main/Data_Obj/Data_R/\",shrt_nm(),\"_li.r\")})\n  dat_vl&lt;-reactive({source(url(data_url()))})\n  dat&lt;-reactive({dat_vl()$value})\n  \n  #Data 2\n  shrt_nm2&lt;-reactive({dat_shrt_nms$short[dat_shrt_nms$long==input$data2]})\n  data_url2 &lt;-reactive({paste0(\"https://raw.githubusercontent.com/BrittanyTroast-NOAA/BBESR_DataViz/main/Data_Obj/Data_R/\",shrt_nm2(),\"_li.r\")})\n  dat_vl2&lt;-reactive({source(url(data_url2()))})\n  dat2&lt;-reactive({dat_vl2()$value})\n  \n  ####CUSTOM SLIDER####\n  observe({\n    shinyjs::click(\"goButton\")\n  })\n  \n  observeEvent(input$data, {\n    selected_data&lt;- dat()$data\n    updateSliderInput(session, \"yearSlider\",\n                      min = min(selected_data$year),\n                      max= max(selected_data$year),\n                      value=c(min(selected_data$year), max(selected_data$year)), step=1)\n  })\n  \n  observeEvent(input$reset,{\n    selected_data&lt;- dat()$data\n    updateSliderInput(session,'yearSlider',value = c(min(selected_data$year), max(selected_data$year)))\n    \n  })\n  \n  \n  \n  observeEvent(input$goButton, {\n    \n    ####MAIN PLOT####\n    output$plot&lt;-renderPlotly({\n      df_pick &lt;- dat()\n      plot_gg&lt;-plot_fn_obj(df_pick)\n      plotly_gg&lt;-ggplotly(plot_gg)\n      plotly_gg\n      \n    })\n    \n    ####OutputSwtich####\n    output$message_or_plot&lt;- renderUI({\n      \n      if(input$data2 == \"\"){\n        return(h2(\"Please choose a second indicator from the 'Compare Indicator' dropdown\"))\n      } else {\n        plotlyOutput(\"compare\", height = '120%')\n      }\n      \n    })\n    \n    ####Compare Plot####\n    output$compare&lt;-renderPlotly({\n      \n      dat1_df&lt;-dat()\n      dat2_df&lt;-dat2()\n      \n      df_pick1&lt;-dat1_df$data\n      df_pick2&lt;-dat2_df$data\n      \n      a_dat &lt;- subset(df_pick1, df_pick1$year&gt;= isolate(input$yearSlider[1]) & df_pick1$year&lt;= isolate(input$yearSlider[2]))\n      b_dat &lt;- subset(df_pick2, df_pick2$year&gt;= isolate(input$yearSlider[1]) & df_pick2$year&lt;= isolate(input$yearSlider[2]))\n      \n      a_dat$scaled&lt;-scale(a_dat$value)\n      b_dat$scaled&lt;-scale(b_dat$value)\n      \n      a_dat$indicator&lt;-input$data\n      b_dat$indicator&lt;-input$data2\n      \n      ab_dat&lt;-as.data.frame(rbind(cbind(a_dat$year, a_dat$scaled, a_dat$indicator), cbind(b_dat$year, b_dat$scaled, b_dat$indicator)))\n      colnames(ab_dat)&lt;-c(\"year\", \"scaled\", \"indicator\")\n      ab_dat[,1:2]&lt;-lapply(ab_dat[,1:2], as.numeric)\n      \n      p&lt;-ggplot(ab_dat, aes(x=year, y=scaled))+\n        geom_hline(yintercept = 0, color=\"gray50\", lwd=0.5, lty=\"dashed\")+\n        geom_line(aes(color=indicator), lwd=1)+\n        scale_color_manual(values = c(\"blue\", \"red\"))+\n        labs(x=\"Year\", y=\"Scaled Value\", color=\"Selected Indicators\")+\n        theme_bw() + theme(legend.position = \"bottom\")\n      \n      ggplotly(p) %&gt;%\n        layout(legend=list(y=1.1,x=0.5, xanchor=\"center\", yanchor=\"center\", orientation=\"h\"))\n    })\n    \n    output$nocompare&lt;-renderText({\n      \"Please select and indicator to compare from the 'Compare Indicator' dropdown.\"\n    })\n    \n    ####TABLE#####\n    output$gt_table&lt;- render_gt({\n      df_pick &lt;- dat()\n      df_dat&lt;-df_pick$data\n      val_df&lt;-df_pick$vals\n      \n      sel_dat&lt;-df_dat[df_dat$year&gt;= isolate(input$yearSlider[1]) & df_dat$year&lt;= isolate(input$yearSlider[2]),]\n      \n      if (nrow(sel_dat)&gt;3) {\n        if (ncol(df_dat)&lt;5.5) {\n          #Mean Trend\n          sel_dat_mean&lt;-mean(sel_dat$value) # mean value last 5 years\n          mean_sel&lt;-if_else(sel_dat_mean&gt;val_df$mean+val_df$sd, \"+\", if_else(sel_dat_mean&lt;val_df$mean-val_df$sd, \"-\",\"●\")) #qualify mean trend\n          \n          #Slope Trend\n          lmout&lt;-summary(lm(sel_dat$value~sel_dat$year))\n          sel_slope&lt;-coef(lmout)[2,1] * length(unique(sel_dat$year)) #multiply by years in the trend (slope per year * number of years=rise over 5 years)\n          slope_sel&lt;-if_else(sel_slope&gt;val_df$sd, \"↑\", if_else(sel_slope&lt; c(-val_df$sd), \"↓\",\"→\"))\n          \n          ###Table stuff\n          new_table&lt;-data.frame(val=c(round(val_df$mean,2), round(val_df$sd,2), val_df$mean_sym, val_df$slope_sym, mean_sel, slope_sel),\n                                metric=c(\"Historical_Mean\",\"Historical_SD\",\"Last 5_Mean\", \"Last 5_Slope\",\"Selected_Mean\", \"Selected_Slope\"))\n          \n          new_table &lt;- new_table %&gt;% pivot_wider(names_from = metric, values_from = val)\n          \n          gt(new_table) %&gt;%\n            tab_spanner_delim(delim = \"_\") %&gt;%\n            tab_stubhead(label = \"Sub Indicator\") %&gt;%\n            tab_header(title = \"Trends in Mean & Slope\") %&gt;%\n            tab_options(table.border.top.color = \"#3498db\",\n                        table.border.bottom.color = \"#3498db\",\n                        table.border.left.color = \"#3498db\",\n                        table.border.right.color = \"#3498db\",\n                        table.border.top.width = 5,\n                        table.border.bottom.width = 5,\n                        table.border.left.width = 5,\n                        table.border.right.width = 5,\n                        table.border.left.style = \"solid\",\n                        table.border.right.style = \"solid\",) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18)),locations = cells_body()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(20), weight = \"bold\", color=\"#2c3e50\"),locations = cells_stubhead()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18), weight = \"bold\", color=\"#2c3e50\"),locations = cells_stub()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18)),locations = cells_column_labels()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(20), weight = \"bold\", color=\"#2c3e50\"),locations = cells_column_spanners()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(24), color=\"#3498db\", weight = \"bold\"),locations = cells_title())\n        } else {\n          #Selected Multi Sub\n          \n          sub_list&lt;-list()\n          subs&lt;-unique(df_dat$subnm)\n          for (i in 1:length(subs)){\n            sub_df&lt;-sel_dat[sel_dat$subnm==subs[i],]\n            vals&lt;-val_df[val_df$subnm==subs[i],]\n            sub_dat_mean&lt;-mean(sub_df$value) # mean value last 5 years\n            mean_sub&lt;-if_else(sub_dat_mean&gt;vals$mean+vals$sd, \"+\", if_else(sub_dat_mean&lt;vals$mean-vals$sd, \"-\",\"●\")) #qualify mean trend\n            \n            #Slope Trend\n            lmout&lt;-summary(lm(sub_df$value~sub_df$year))\n            sub_slope&lt;-coef(lmout)[2,1] * length(unique(sub_df$year)) #multiply by years in the trend (slope per year * number of years=rise over 5 years)\n            slope_sub&lt;-if_else(sub_slope&gt;vals$sd, \"↑\", if_else(sub_slope&lt; c(-vals$sd), \"↓\",\"→\"))\n            \n            add_sub&lt;-data.frame(mean_sel=mean_sub,\n                                slope_sel=slope_sub)\n            sub_list[[i]]&lt;-add_sub\n            \n          }\n          \n          add_sel_df&lt;-do.call(\"rbind\",sub_list)\n          val_df&lt;-cbind(val_df, add_sel_df)\n          \n          val_df$mean&lt;-as.character(val_df$mean)\n          val_df$sd&lt;-as.character(val_df$sd)\n          \n          new_table&lt;-val_df %&gt;% select(\"Sub_Indicator\"=subnm,\"Historical_Mean\"=mean, \"Historical_SD\"=sd, \"Last 5_Mean\"=mean_sym, \"Last 5_Slope\"=slope_sym, \"Selected_Mean\"=mean_sel, \"Selected_Slope\"=slope_sel) %&gt;%\n            group_by(Sub_Indicator) %&gt;% pivot_longer(cols = -c(\"Sub_Indicator\"))\n          \n          \n          new_table &lt;- new_table %&gt;% pivot_wider(names_from = name, values_from = value)\n          new_table[,2:3]&lt;-lapply(new_table[,2:3], function(x) {round(as.numeric(x),2)})\n          rownames(new_table)&lt;-new_table$Sub_Indicator\n          \n          gt(new_table, rowname_col = \"Sub_Indicator\", groupname_col = NA) %&gt;%\n            tab_spanner_delim(delim = \"_\") %&gt;%\n            tab_stubhead(label = \"Sub Indicator\") %&gt;%\n            tab_header(title = \"Trends in Mean & Slope\") %&gt;%\n            tab_options(table.border.top.color = \"#3498db\",\n                        table.border.bottom.color = \"#3498db\",\n                        table.border.left.color = \"#3498db\",\n                        table.border.right.color = \"#3498db\",\n                        table.border.top.width = 5,\n                        table.border.bottom.width = 5,\n                        table.border.left.width = 5,\n                        table.border.right.width = 5,\n                        table.border.left.style = \"solid\",\n                        table.border.right.style = \"solid\",) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18)),locations = cells_body()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(20), weight = \"bold\", color=\"#2c3e50\"),locations = cells_stubhead()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18), weight = \"bold\", color=\"#2c3e50\"),locations = cells_stub()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18)),locations = cells_column_labels()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(20), weight = \"bold\", color=\"#2c3e50\"),locations = cells_column_spanners()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(24), color=\"#3498db\", weight = \"bold\"),locations = cells_title())\n        }\n        \n        \n      } else {\n        \n        ###Table stuff\n        if (ncol(df_dat)&lt;5.5) {\n          new_table&lt;-data.frame(val=c(round(val_df$mean,2), round(val_df$sd,2), val_df$mean_sym, val_df$slope_sym),\n                                metric=c(\"Historical_Mean\",\"Historical_SD\",\"Last 5_Mean\", \"Last 5_Slope\"))\n          \n          new_table &lt;- new_table %&gt;% pivot_wider(names_from = metric, values_from = val)\n          \n          gt(new_table) %&gt;%\n            tab_spanner_delim(delim = \"_\") %&gt;%\n            tab_stubhead(label = \"Sub Indicator\") %&gt;%\n            tab_header(title = \"Trends in Mean & Slope\") %&gt;%\n            tab_options(table.border.top.color = \"#3498db\",\n                        table.border.bottom.color = \"#3498db\",\n                        table.border.left.color = \"#3498db\",\n                        table.border.right.color = \"#3498db\",\n                        table.border.top.width = 5,\n                        table.border.bottom.width = 5,\n                        table.border.left.width = 5,\n                        table.border.right.width = 5,\n                        table.border.left.style = \"solid\",\n                        table.border.right.style = \"solid\",) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18)),locations = cells_body()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(20), weight = \"bold\", color=\"#2c3e50\"),locations = cells_stubhead()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18), weight = \"bold\", color=\"#2c3e50\"),locations = cells_stub()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18)),locations = cells_column_labels()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(20), weight = \"bold\", color=\"#2c3e50\"),locations = cells_column_spanners()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(24), color=\"#3498db\", weight = \"bold\"),locations = cells_title())\n          \n        } else {\n          val_df$mean&lt;-as.character(val_df$mean)\n          val_df$sd&lt;-as.character(val_df$sd)\n          \n          new_table&lt;-val_df %&gt;% select(\"Sub_Indicator\"=subnm,\"Historical_Mean\"=mean, \"Historical_SD\"=sd, \"Last 5_Mean\"=mean_sym, \"Last 5_Slope\"=slope_sym) %&gt;%\n            group_by(Sub_Indicator) %&gt;% pivot_longer(cols = -c(\"Sub_Indicator\"))\n          \n          \n          new_table &lt;- new_table %&gt;% pivot_wider(names_from = name, values_from = value)\n          new_table[,2:3]&lt;-lapply(new_table[,2:3], function(x) {round(as.numeric(x),2)})\n          rownames(new_table)&lt;-new_table$Sub_Indicator\n          \n          gt(new_table, rowname_col = \"Sub_Indicator\", groupname_col = NA) %&gt;%\n            tab_spanner_delim(delim = \"_\") %&gt;%\n            tab_stubhead(label = \"Sub Indicator\") %&gt;%\n            tab_header(title = \"Trends in Mean & Slope\") %&gt;%\n            tab_options(table.border.top.color = \"#3498db\",\n                        table.border.bottom.color = \"#3498db\",\n                        table.border.left.color = \"#3498db\",\n                        table.border.right.color = \"#3498db\",\n                        table.border.top.width = 5,\n                        table.border.bottom.width = 5,\n                        table.border.left.width = 5,\n                        table.border.right.width = 5,\n                        table.border.left.style = \"solid\",\n                        table.border.right.style = \"solid\",) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18)),locations = cells_body()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(20), weight = \"bold\", color=\"#2c3e50\"),locations = cells_stubhead()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18), weight = \"bold\", color=\"#2c3e50\"),locations = cells_stub()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(18)),locations = cells_column_labels()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(20), weight = \"bold\", color=\"#2c3e50\"),locations = cells_column_spanners()) %&gt;%\n            tab_style(style = cell_text(align = \"center\", size=px(24), color=\"#3498db\", weight = \"bold\"),locations = cells_title())\n          \n        }\n        \n      }\n    })\n    \n    \n    #####Plain Text#####\n    output$plain_header&lt;- renderText({\n      plain_header&lt;-paste0(\"&lt;b&gt;&lt;u&gt;Summary&lt;/b&gt;&lt;/u&gt;\")\n    })\n    \n    ####PLAIN TEXT####\n    output$plain_text&lt;-renderText({\n      df_pick &lt;- dat()\n      df_dat&lt;-df_pick$data\n      val_df&lt;-df_pick$vals\n      df_lab&lt;-df_pick$labs\n      sel_dat&lt;-df_dat[df_dat$year&gt;= isolate(input$yearSlider[1]) & df_dat$year&lt;= isolate(input$yearSlider[2]),]\n      \n      \n      if (nrow(sel_dat)&lt;3) {\n        ###Not selected no subs\n        if (ncol(df_dat)&lt;5.5) {\n          text&lt;-paste0(\"The &lt;b&gt;\",df_lab[1,2] ,\"&lt;/b&gt; indicator has a historical mean of &lt;u&gt;&lt;b&gt;\", round(val_df$mean[1],2),\"&lt;/u&gt;&lt;/b&gt; ±&lt;u&gt;&lt;b&gt;\",round(val_df$sd[1],2)  ,\"&lt;/u&gt;&lt;/b&gt; and trends for the last five years of data show mean values &lt;b&gt;&lt;u&gt;\",val_df$mean_word, \"&lt;/b&gt;&lt;/u&gt; 1 standard deviation from the historical mean and &lt;u&gt;&lt;b&gt;\",val_df$slope_word, \"&lt;/u&gt;&lt;/b&gt; trend in slope.\")\n        } else {\n          ###Not slected subs\n          val_df$mean&lt;-as.character(val_df$mean)\n          val_df$sd&lt;-as.character(val_df$sd)\n          \n          new_table&lt;-val_df %&gt;% select(subnm, mean,  sd,  mean_sym,  slope_sym) %&gt;% \n            group_by(subnm) %&gt;% pivot_longer(cols = -c(subnm))\n          \n          val_df$mean&lt;-as.numeric(val_df$mean)\n          val_df$sd&lt;-as.numeric(val_df$sd)\n          \n          \n          text&lt;-paste0(\"The &lt;b&gt;\",df_lab[1,2] ,\"&lt;/b&gt; indicator for the &lt;u&gt;&lt;b&gt;\", val_df$subnm[1],\"&lt;/u&gt;&lt;/b&gt; sub indicator has a historical mean of &lt;u&gt;&lt;b&gt;\", round(val_df$mean[1],2),\"&lt;/u&gt;&lt;/b&gt; ±&lt;u&gt;&lt;b&gt;\",round(val_df$sd[1],2)  ,\"&lt;/u&gt;&lt;/b&gt; and trends for the last five years of data show mean values &lt;b&gt;&lt;u&gt;\",val_df$mean_word[1], \"&lt;/b&gt;&lt;/u&gt; 1 standard deviation from the historical mean and &lt;u&gt;&lt;b&gt;\",val_df$slope_word[1], \"&lt;/u&gt;&lt;/b&gt; trend in slope.\")\n          \n          text_li&lt;-list()\n          for (i in 2:length(val_df$subnm)) {\n            subtext&lt;-paste0(\"The &lt;u&gt;&lt;b&gt;\",val_df$subnm[i], \"&lt;/u&gt;&lt;/b&gt; sub index historical mean is &lt;u&gt;&lt;b&gt;\",round(val_df$mean[i],2),\"&lt;/u&gt;&lt;/b&gt;±&lt;u&gt;&lt;b&gt;\",round(val_df$sd[i],2),\"&lt;/u&gt;&lt;/b&gt; and trends from the last five years of data show mean values&lt;u&gt;&lt;b&gt;\",val_df$mean_word[i],\"&lt;/u&gt;&lt;/b&gt; 1 standard deviation from the historical mean and &lt;u&gt;&lt;b&gt;\",val_df$slope_word[i], \"&lt;/u&gt;&lt;/b&gt; trend in slope.\") \n            text_li[[i]]&lt;-subtext\n          }\n          subs_text&lt;-do.call(\"paste\", text_li)\n          paste(text,subs_text)\n        }\n        \n        \n      } else {\n        if (ncol(df_dat)&lt;5.5) {\n          \n          #Selected no subs\n          #Mean Trend\n          sel_dat_mean&lt;-mean(sel_dat$value) # mean value last 5 years\n          mean_sel_word&lt;-if_else(sel_dat_mean&gt;val_df$mean+val_df$sd, \"greater\", if_else(sel_dat_mean&lt;val_df$mean-val_df$sd, \"below\",\"within\")) #qualify mean trend\n          \n          #Slope Trend\n          lmout&lt;-summary(lm(sel_dat$value~sel_dat$year))\n          sel_slope&lt;-coef(lmout)[2,1] * length(unique(sel_dat$year)) #multiply by years in the trend (slope per year * number of years=rise over 5 years)\n          slope_sel_word&lt;-if_else(sel_slope&gt;val_df$sd, \"an increasing\", if_else(sel_slope&lt; c(-val_df$sd), \"a decreasing\",\"a stable\"))\n          \n          range&lt;-range(sel_dat$year)\n          \n          text&lt;-paste0(\"The &lt;b&gt;\",df_lab[1,2] ,\"&lt;/b&gt; indicator has a historical mean of &lt;u&gt;&lt;b&gt;\", round(val_df$mean[1],2),\"&lt;/u&gt;&lt;/b&gt; ±&lt;u&gt;&lt;b&gt;\",round(val_df$sd[1],2)  ,\"&lt;/u&gt;&lt;/b&gt; and trends for the last five years of data show mean values &lt;b&gt;&lt;u&gt;\",val_df$mean_word, \"&lt;/u&gt;&lt;/b&gt; 1 standard deviation from the historical mean and &lt;b&gt;&lt;u&gt;\",val_df$slope_word, \"&lt;/b&gt;&lt;/u&gt; trend in slope. The trends in the selected years of data &lt;b&gt;(\",range[1],\"-\",range[2],\")&lt;/b&gt; show mean values &lt;b&gt;&lt;u&gt;\", mean_sel_word,\"&lt;/b&gt;&lt;/u&gt; 1 standard deviation from the historical mean and &lt;b&gt;&lt;u&gt;\",slope_sel_word, \"&lt;/b&gt;&lt;/u&gt; trend in slope.\")\n          \n          \n        } else {\n          ###Selected w subs\n          sub_list&lt;-list()\n          subs&lt;-unique(df_dat$subnm)\n          for (i in 1:length(subs)){\n            sub_df&lt;-sel_dat[sel_dat$subnm==subs[i],]\n            vals&lt;-val_df[val_df$subnm==subs[i],]\n            sub_dat_mean&lt;-mean(sub_df$value) # mean value last 5 years\n            mean_sub&lt;-if_else(sub_dat_mean&gt;vals$mean+vals$sd, \"greater\", if_else(sub_dat_mean&lt;vals$mean-vals$sd, \"below\",\"within\")) #qualify mean trend\n            \n            #Slope Trend\n            lmout&lt;-summary(lm(sub_df$value~sub_df$year))\n            sub_slope&lt;-coef(lmout)[2,1] * length(unique(sub_df$year)) #multiply by years in the trend (slope per year * number of years=rise over 5 years)\n            slope_sub&lt;-if_else(sub_slope&gt;vals$sd, \"an increasing\", if_else(sub_slope&lt; c(-vals$sd), \"a decreasing\",\"a stable\"))\n            \n            add_sub&lt;-data.frame(mean_sel=mean_sub,\n                                slope_sel=slope_sub)\n            sub_list[[i]]&lt;-add_sub\n            \n          }\n          add_sel_df&lt;-do.call(\"rbind\",sub_list)\n          val_df&lt;-cbind(val_df, add_sel_df)\n          \n          val_df$mean&lt;-as.character(val_df$mean)\n          val_df$sd&lt;-as.character(val_df$sd)\n          \n          val_df&lt;-val_df %&gt;% select(subnm,mean, sd, mean_word, slope_word, mean_sel, slope_sel)\n          val_df$mean&lt;-as.numeric(val_df$mean)\n          val_df$sd&lt;-as.numeric(val_df$sd)\n          \n          range&lt;-range(sel_dat$year)\n          \n          text&lt;-paste0(\"The &lt;b&gt;\",df_lab[1,2] ,\"&lt;/b&gt; indicator for the &lt;u&gt;&lt;b&gt;\", val_df$subnm[1],\"&lt;/u&gt;&lt;/b&gt; sub indicator has a historical mean of &lt;u&gt;&lt;b&gt;\", round(val_df$mean[1],2),\"&lt;/u&gt;&lt;/b&gt; ±&lt;u&gt;&lt;b&gt;\",round(val_df$sd[1],2)  ,\"&lt;/u&gt;&lt;/b&gt; and trends for the last five years of data show mean values &lt;b&gt;&lt;u&gt;\",val_df$mean_word[1], \"&lt;/b&gt;&lt;/u&gt; 1 standard deviation from the historical mean and &lt;u&gt;&lt;b&gt;\",val_df$slope_word[1], \"&lt;/u&gt;&lt;/b&gt; trend in slope. The trends in the selected years of data &lt;b&gt;(\",range[1],\"-\",range[2],\")&lt;/b&gt; show mean values &lt;b&gt;&lt;u&gt;\", val_df$mean_sel[1],\"&lt;/b&gt;&lt;/u&gt; 1 standard deviation from the historical mean and &lt;b&gt;&lt;u&gt;\",val_df$slope_sel[1], \"&lt;/b&gt;&lt;/u&gt; trend in slope.\")\n          \n          text_li&lt;-list()\n          for (i in 2:length(val_df$subnm)) {\n            subtext&lt;-paste0(\"The &lt;u&gt;&lt;b&gt;\",val_df$subnm[i], \"&lt;/u&gt;&lt;/b&gt; sub index historical mean is &lt;u&gt;&lt;b&gt;\",round(val_df$mean[i],2),\" &lt;/u&gt;&lt;/b&gt;±&lt;u&gt;&lt;b&gt;\",round(val_df$sd[i],2),\"&lt;/u&gt;&lt;/b&gt; and trends from the last five years of data show mean values &lt;u&gt;&lt;b&gt;\",val_df$mean_word[i],\"&lt;/u&gt;&lt;/b&gt; 1 standard deviation from the historical mean and &lt;u&gt;&lt;b&gt;\",val_df$slope_word[i], \"&lt;/u&gt;&lt;/b&gt; trend in slope. The trends in the selected years of data show mean values &lt;b&gt;&lt;u&gt;\", val_df$mean_sel[i],\"&lt;/b&gt;&lt;/u&gt; 1 standard deviation from the historical mean and &lt;b&gt;&lt;u&gt;\",val_df$slope_sel[i], \"&lt;/b&gt;&lt;/u&gt; trend in slope.\") \n            text_li[[i]]&lt;-subtext\n          }\n          subs_text&lt;-do.call(\"paste\", text_li)\n          paste(text,subs_text)\n          \n        }\n        \n        \n      }\n    })\n    \n    \n    \n    \n    \n    \n  })\n  \n}\n\nshinyApp(ui, server)"
  }
]