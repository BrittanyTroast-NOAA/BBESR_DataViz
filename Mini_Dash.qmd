---
title: "Mini_Dash"
format:
  html:
    resources: 
      - shinylive-sw.js  # Required to publish the shinylive service worker
filters:
  - shinylive
---

THIS IS A TEST
```{r, eval=F, knit=F}
data_url <- "https://github.com/BrittanyTroast-NOAA/BBESR_DataViz/raw/main/Data_Obj/brpeli_li.rds"
    download.file(data_url, "brpeli_li.rds", mode = )
    dat<-readRDS("brpeli_li.rds")

    dput(readRDS('brpeli_li.rds'), file='hello.r')
    
    readRDS(url(data_url))

dput(readRDS(url(data_url), "rb"), file="pel2.r")
test<-source("pel2.r")

test$value$data

    test<-source(url("https://raw.githubusercontent.com/BrittanyTroast-NOAA/BBESR_DataViz/main/pel2.r"))

```


```{shinylive-r}
#| standalone: true
#| viewerHeight: 600
## file: app.R
library(shiny)

ui <- fluidPage(
  titlePanel("Hello Shiny!"),
  # h3("Data URL"),
  # verbatimTextOutput("urlText"),
  # h3("Working Directory"),
  # verbatimTextOutput("workingDirectory"),
  # h3("File System Information"),
  # verbatimTextOutput("fileSystem"),
  h3("Downloaded Data by Relative URL"),
  verbatimTextOutput("retrievedData")
)

server <- function(input, output, session) {
  
  # data_url <- "https://github.com/BrittanyTroast-NOAA/BBESR_DataViz/blob/main/Data_Obj/Data_CSV/brown_peli.csv"
  # 
  # output$urlText <- renderText({
  #   data_url
  # })
  # 
  # output$fileSystem <- renderPrint({
  #   list.files()
  # })
  # 
  # output$workingDirectory <- renderPrint({
  #   getwd()
  # })

  output$retrievedData <- renderPrint({
    test<-source(url("https://raw.githubusercontent.com/BrittanyTroast-NOAA/BBESR_DataViz/main/pel2.r"))
    test$value$data
  })
  
}

# Create Shiny app ----
shinyApp(ui = ui, server = server)
```
