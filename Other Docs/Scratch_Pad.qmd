---
title: "Scratch_Pad"
format: html
---


All years min/max
```{r}
crab<-readRDS("Data_Obj/blcrab_li.rds")
peli<-readRDS("Data_Obj/brpeli_li.rds")
nav<-readRDS("Data_Obj/nav_li.rds")
oilspill<-readRDS("Data_Obj/oilsp_li.rds")
oyster<-readRDS("Data_Obj/oystercat_li.rds")
sml_bus<-readRDS("Data_Obj/persmbusi_li.rds")
red_drum<-readRDS("Data_Obj/rdrum_li.rds")
ves_deal<-readRDS("Data_Obj/vesfish_li.rds")


dfs<-list(crab, peli, nav, oilspill, oyster, sml_bus, red_drum, ves_deal)
dfs_nms<-c("crab", "peli", "nav", "oilspill", "oyster", "sml_bus", "red_drum", "ves_deal")
i=1
minmax_li<-list()

for (i in 1:length(dfs)) {
  df_dat<-dfs[[i]]$data
  minmax<-data.frame(data=dfs_nms[i],min=min(df_dat$year), max=max(df_dat$year))
  minmax_li[[i]]<-minmax
}
full_minmax<-do.call("rbind", minmax_li)

final_minmax<-data.frame(min=min(full_minmax$min), max=max(full_minmax$max))

```


Input SubCategories
```{r}
#Old
selectInput("data", label = h2(HTML("<b>Choose Indicator:</b>"), style = "font-size:22px;"),
                             choices = c("Oil Spills",
                                         "Nuisance Aquatic Vegetation",
                                         "Red Drum",
                                         "Blue Crab Catch",
                                         "Brown Pelican",
                                         "Oyster Catch",
                                         "Percent Small Business",
                                         "Vessels Fishing & Seafood Dealers"))

#New
selectInput("data", label = h2(HTML("<b>Choose Indicator:</b>"), style = "font-size:22px;"),
                             choices = lsit(
                               'Drivers' = list("Oil Spills"),
                               'Pressures'=list("Oil Spills","Nuisance Aquatic Vegetation"),
                               'States'=list("Red Drum","Brown Pelican"),
                               'Human Activities'=list("Blue Crab Catch","Oyster Catch","Vessels Fishing & Seafood Dealers"),
                               'Human Dimensions'=list("Percent Small Business")
                             ))

?selectInput()

?list()


```

ifelse ggplot layer
```{r}
doub<-vesfish_li$data
quad<-unemploy_li$data

dat_df<-doub
dat_df<-quad

ggplot(dat_df, aes(x=year, y=value))+
  facet_wrap(~subnm, ncol = ifelse(length(unique(dat_df$subnm))<4, 1, 2))+
  geom_line()
```

Compare two indicators

- combine data
- get data for each indicator
- add ind name to column for id
- figure out if can plot in same graph or sep
- normalize and change color based on indicator to show on same graph
```{r}
library(tidyverse)
library(plotly)
library(tidyr)


a_dat<-nav_li$data
b_dat<-unemploy_li$data

a_dat$scaled<-scale(a_dat$value)
b_dat$scaled<-scale(b_dat$value)

a_dat$indicator<-"NAV"
b_dat$indicator<-"Unemploy"

if(!"subnm" %in% colnames(a_dat)) {
  a_dat$subnm<-a_dat$indicator
}

a_dat<-select(a_dat, year, scaled, indicator, subnm)
b_dat<-select(b_dat, year, scaled, indicator, subnm)

ab_dat<-rbind(a_dat, b_dat)
ab_dat$subnm<-factor(ab_dat$subnm, levels = unique((ab_dat$subnm)))

# ggplot(ab_dat, aes(x=year, y=scaled))+
#   # geom_line(aes(color=indicator, lty=subnm), lwd=1)+
#   geom_line(data=a_dat, aes(color=indicator, lty=ifelse(is.na(a_dat$subnm), "solid", subnm)), lwd=0.75)+
#   geom_line(data=b_dat, aes(color=indicator, lty=ifelse(is.na(b_dat$subnm), "solid", subnm)), lwd=0.75)+
#   geom_hline(yintercept = 0, color="black", lwd=0.5)+
#   scale_color_manual(values = c("blue", "red"))+
#   labs(x="Year", y="Scaled Value", color="Selected Indicators", lty="SubNm")+
#   theme_bw() + theme(legend.position = "bottom")

p<-ggplot(ab_dat, aes(x=year, y=scaled))+
  geom_line(aes(color=indicator, lty=subnm), lwd=0.5)+
  geom_hline(yintercept = 0, color="black", lwd=0.5)+
  scale_color_manual(values = c("blue", "red"))+
  labs(x="Year", y="Scaled Value", color="Selected Indicators", lty="SubNm")+
  theme_bw() + theme(legend.position = "bottom")

ggplotly(p) %>%
  layout(legend=list(y=1.1,x=0.5, xanchor="center", yanchor="center", orientation="h"))
```

